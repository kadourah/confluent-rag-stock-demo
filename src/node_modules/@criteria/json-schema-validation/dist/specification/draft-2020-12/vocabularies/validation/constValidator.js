"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
exports.constValidator = void 0;
var format_1 = require("../../../../util/format");
var fast_deep_equal_1 = __importDefault(require("fast-deep-equal"));
function constValidator(schema, schemaPath, context) {
    if (!('const' in schema)) {
        return null;
    }
    var constValue = schema['const'];
    var outputFormat = context.outputFormat;
    var schemaLocation = schemaPath.join('');
    return function (instance, instanceLocation, annotationResults) {
        if ((0, fast_deep_equal_1["default"])(instance, constValue)) {
            return {
                valid: true,
                schemaLocation: schemaLocation,
                schemaKeyword: 'const',
                instanceLocation: instanceLocation,
                annotationResults: {
                    "const": "".concat(instance, " = ").concat(constValue)
                }
            };
        }
        else {
            if (outputFormat === 'flag') {
                return { valid: false };
            }
            else {
                return {
                    valid: false,
                    schemaLocation: schemaLocation,
                    schemaKeyword: 'const',
                    instanceLocation: instanceLocation,
                    message: "should be ".concat((0, format_1.format)(constValue), " but is ").concat((0, format_1.format)(instance), " instead")
                };
            }
        }
    };
}
exports.constValidator = constValidator;
