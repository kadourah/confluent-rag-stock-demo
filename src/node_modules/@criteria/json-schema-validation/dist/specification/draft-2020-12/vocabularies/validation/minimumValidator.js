"use strict";
exports.__esModule = true;
exports.minimumValidator = void 0;
var format_1 = require("../../../../util/format");
var isJSONNumber_1 = require("../../../../util/isJSONNumber");
function minimumValidator(schema, schemaPath, context) {
    if (!('minimum' in schema)) {
        return null;
    }
    var minimum = schema['minimum'];
    var outputFormat = context.outputFormat;
    var schemaLocation = schemaPath.join('');
    return function (instance, instanceLocation, annotationResults) {
        if (!(0, isJSONNumber_1.isJSONNumber)(instance)) {
            return { valid: true, schemaLocation: schemaLocation, instanceLocation: instanceLocation };
        }
        var valid = instance >= minimum;
        if (valid) {
            return {
                valid: true,
                schemaLocation: schemaLocation,
                schemaKeyword: 'minimum',
                instanceLocation: instanceLocation
            };
        }
        else {
            if (outputFormat === 'flag') {
                return { valid: false };
            }
            else {
                return {
                    valid: false,
                    schemaLocation: schemaLocation,
                    schemaKeyword: 'minimum',
                    instanceLocation: instanceLocation,
                    message: "should be greater than or equal to ".concat(minimum, " but is ").concat((0, format_1.format)(instance), " instead")
                };
            }
        }
    };
}
exports.minimumValidator = minimumValidator;
