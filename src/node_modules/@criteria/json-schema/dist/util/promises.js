"use strict";
exports.__esModule = true;
exports.chainForEach = exports.chain = exports.isPromise = void 0;
function isPromise(value) {
    return typeof value === 'object' && value !== null && typeof value.then === 'function';
}
exports.isPromise = isPromise;
// Similar to calling then() on a Promise,
// but returns synchronously if valueOrPromise is not a Promise
function chain(valueOrPromise, onFulfilled, onRejected) {
    if (isPromise(valueOrPromise)) {
        return valueOrPromise.then(onFulfilled, onRejected);
    }
    else {
        return onFulfilled(valueOrPromise);
    }
}
exports.chain = chain;
function chainForEach(values, callback) {
    var processNext = function () {
        var result = values.next();
        if (result.done) {
            return;
        }
        return chain(callback(result.value), processNext);
    };
    return processNext();
}
exports.chainForEach = chainForEach;
