import { URI } from '../util/uri';
import { ContentIndex, ReferenceInfo } from './types';
export interface JSONReferenceInfo<Metadata> {
    baseURI: URI;
    metadata: Metadata;
}
export interface JSONReferenceContentIndexConfiguration<Metadata> {
    shouldIndexObject: (reference: {
        $ref: string;
    }) => boolean;
}
export declare class JSONReferenceContentIndex<Metadata> implements ContentIndex<Metadata> {
    private shouldIndexObject;
    constructor(configuration: JSONReferenceContentIndexConfiguration<Metadata>);
    isObjectIndexed(object: object): boolean;
    isURIIndexed(uri: string): boolean;
    indexedObjectWithURI(uri: URI): any;
    infoForIndexedObject(value: any): any;
    addContentFromRoot(root: any, baseURI: URI, rootMetadata: Metadata): Map<object, ReferenceInfo<Metadata>>;
}
