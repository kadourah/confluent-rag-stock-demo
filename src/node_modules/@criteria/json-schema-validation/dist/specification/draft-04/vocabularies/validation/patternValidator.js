"use strict";
exports.__esModule = true;
exports.patternValidator = void 0;
var format_1 = require("../../../../util/format");
var isJSONString_1 = require("../../../../util/isJSONString");
function patternValidator(schema, schemaPath, context) {
    if (!('pattern' in schema)) {
        return null;
    }
    var pattern = schema['pattern'];
    var regexp = new RegExp(pattern);
    var outputFormat = context.outputFormat;
    var schemaLocation = schemaPath.join('');
    return function (instance, instanceLocation, annotationResults) {
        if (!(0, isJSONString_1.isJSONString)(instance)) {
            return { valid: true, schemaLocation: schemaLocation, instanceLocation: instanceLocation };
        }
        if (regexp.test(instance)) {
            return { valid: true, schemaLocation: schemaLocation, schemaKeyword: 'multipleOf', instanceLocation: instanceLocation };
        }
        else {
            if (outputFormat === 'flag') {
                return { valid: false };
            }
            else {
                return {
                    valid: false,
                    schemaLocation: schemaLocation,
                    schemaKeyword: 'pattern',
                    instanceLocation: instanceLocation,
                    message: "should match '".concat(pattern, "' but is ").concat((0, format_1.format)(instance), " instead")
                };
            }
        }
    };
}
exports.patternValidator = patternValidator;
