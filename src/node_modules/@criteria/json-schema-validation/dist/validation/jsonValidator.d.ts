import { MaybePromise } from '../util/promises';
import { FlagOutput, OutputFormat, VerboseOutput } from './Output';
export declare const defaultOutputFormat = "flag";
export declare const defaultFailFast = false;
export declare const defaultAssertFormat = false;
export declare const defaultDefaultMetaSchemaID: "https://json-schema.org/draft/2020-12/schema";
export type Retrieve = (uri: string) => any | Promise<any>;
export type ValidateOptions = {
    outputFormat?: OutputFormat;
    failFast?: boolean;
    assertFormat?: boolean;
    baseURI?: string;
    retrieve?: (uri: string) => any;
    defaultMetaSchemaID?: string;
};
export type AsyncValidateOptions = Omit<ValidateOptions, 'retrieve'> & {
    retrieve?: (uri: string) => Promise<any>;
};
export type JSONValidator = (instance: unknown) => FlagOutput | VerboseOutput;
export declare function jsonValidator(schema: object | boolean, options?: Omit<ValidateOptions, 'retrieve'>): JSONValidator;
export declare function jsonValidator(schema: object | boolean, options?: AsyncValidateOptions): MaybePromise<JSONValidator>;
export declare function jsonValidator(schema: object | boolean, options?: ValidateOptions): JSONValidator;
export declare function jsonValidatorAsync(schema: object | boolean, options?: AsyncValidateOptions): Promise<JSONValidator>;
export declare function validateJSON(instance: unknown, schema: object | boolean, options?: Omit<ValidateOptions, 'retrieve'>): void;
export declare function validateJSON(instance: unknown, schema: object | boolean, options?: AsyncValidateOptions): MaybePromise<void>;
export declare function validateJSON(instance: unknown, schema: object | boolean, options?: ValidateOptions): void;
export declare function validateJSONAsync(instance: unknown, schema: object | boolean, options?: AsyncValidateOptions): Promise<void>;
export declare function isJSONValid(instance: unknown, schema: object | boolean, options?: Omit<ValidateOptions, 'failFast' | 'retrieve'>): boolean;
export declare function isJSONValid(instance: unknown, schema: object | boolean, options?: Omit<AsyncValidateOptions, 'failFast'>): MaybePromise<boolean>;
export declare function isJSONValid(instance: unknown, schema: object | boolean, options?: Omit<ValidateOptions, 'failFast'>): boolean;
export declare function isJSONValidAsync(instance: unknown, schema: object | boolean, options?: Omit<AsyncValidateOptions, 'failFast'>): Promise<boolean>;
