"use strict";
exports.__esModule = true;
exports.maximumValidator = void 0;
var format_1 = require("../../../../util/format");
var isJSONNumber_1 = require("../../../../util/isJSONNumber");
function maximumValidator(schema, schemaPath, context) {
    var _a;
    if (!('maximum' in schema)) {
        return null;
    }
    var maximum = schema['maximum'];
    var exclusiveMaximum = (_a = schema['exclusiveMaximum']) !== null && _a !== void 0 ? _a : false;
    var outputFormat = context.outputFormat;
    var schemaLocation = schemaPath.join('');
    return function (instance, instanceLocation, annotationResults) {
        if (!(0, isJSONNumber_1.isJSONNumber)(instance)) {
            return { valid: true, schemaLocation: schemaLocation, instanceLocation: instanceLocation };
        }
        if (exclusiveMaximum ? instance < maximum : instance <= maximum) {
            return { valid: true, schemaLocation: schemaLocation, schemaKeyword: 'maximum', instanceLocation: instanceLocation };
        }
        else {
            if (outputFormat === 'flag') {
                return { valid: false };
            }
            else {
                return {
                    valid: false,
                    schemaLocation: schemaLocation,
                    schemaKeyword: 'maximum',
                    instanceLocation: instanceLocation,
                    message: "should be ".concat(exclusiveMaximum ? 'less than' : 'less than or equal to', " ").concat(maximum, " but is ").concat((0, format_1.format)(instance), " instead")
                };
            }
        }
    };
}
exports.maximumValidator = maximumValidator;
