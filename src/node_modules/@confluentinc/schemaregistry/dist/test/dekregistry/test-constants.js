"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TEST_DEK_LATEST = exports.TEST_DEK_2 = exports.TEST_DEK_V2 = exports.TEST_DEK = exports.TEST_KEK_2 = exports.TEST_KEK = exports.TEST_VERSION = exports.TEST_ENCRYPTED_KEY_MATERIAL = exports.TEST_ALGORITHM = exports.TEST_SUBJECT = exports.TEST_DOC = exports.TEST_KMS_PROPS = exports.TEST_KMS_KEY_ID = exports.TEST_KMS_TYPE = exports.TEST_KEK_NAME_2 = exports.TEST_KEK_NAME = void 0;
const constants_1 = require("../../rules/encryption/dekregistry/constants");
const TEST_KEK_NAME = 'test-kek-name';
exports.TEST_KEK_NAME = TEST_KEK_NAME;
const TEST_KEK_NAME_2 = 'test-kek-name2';
exports.TEST_KEK_NAME_2 = TEST_KEK_NAME_2;
const TEST_KMS_TYPE = 'test-kms-type';
exports.TEST_KMS_TYPE = TEST_KMS_TYPE;
const TEST_KMS_KEY_ID = 'test-kms-key-id';
exports.TEST_KMS_KEY_ID = TEST_KMS_KEY_ID;
const TEST_KMS_PROPS = { testKey: 'testValue' };
exports.TEST_KMS_PROPS = TEST_KMS_PROPS;
const TEST_DOC = 'test-doc';
exports.TEST_DOC = TEST_DOC;
const TEST_SUBJECT = 'test-subject';
exports.TEST_SUBJECT = TEST_SUBJECT;
const TEST_ALGORITHM = 'test-algorithm';
exports.TEST_ALGORITHM = TEST_ALGORITHM;
const TEST_ENCRYPTED_KEY_MATERIAL = 'test-encrypted-key-material';
exports.TEST_ENCRYPTED_KEY_MATERIAL = TEST_ENCRYPTED_KEY_MATERIAL;
const TEST_VERSION = 1;
exports.TEST_VERSION = TEST_VERSION;
const TEST_KEK = {
    name: TEST_KEK_NAME,
    kmsType: TEST_KMS_TYPE,
    kmsKeyId: TEST_KMS_KEY_ID,
    kmsProps: TEST_KMS_PROPS,
    doc: TEST_DOC,
    shared: true
};
exports.TEST_KEK = TEST_KEK;
const TEST_KEK_2 = {
    name: TEST_KEK_NAME_2,
    kmsType: TEST_KMS_TYPE,
    kmsKeyId: TEST_KMS_KEY_ID,
    kmsProps: TEST_KMS_PROPS,
    doc: TEST_DOC,
    shared: true
};
exports.TEST_KEK_2 = TEST_KEK_2;
const TEST_DEK = {
    kekName: TEST_KEK_NAME,
    subject: TEST_SUBJECT,
    algorithm: TEST_ALGORITHM,
    encryptedKeyMaterial: TEST_ENCRYPTED_KEY_MATERIAL,
    version: TEST_VERSION,
    ts: constants_1.MOCK_TS
};
exports.TEST_DEK = TEST_DEK;
const TEST_DEK_V2 = {
    kekName: TEST_KEK_NAME,
    subject: TEST_SUBJECT,
    algorithm: TEST_ALGORITHM,
    encryptedKeyMaterial: TEST_ENCRYPTED_KEY_MATERIAL,
    version: 2,
    ts: constants_1.MOCK_TS
};
exports.TEST_DEK_V2 = TEST_DEK_V2;
const TEST_DEK_2 = {
    kekName: TEST_KEK_NAME_2,
    subject: TEST_SUBJECT,
    algorithm: TEST_ALGORITHM,
    encryptedKeyMaterial: TEST_ENCRYPTED_KEY_MATERIAL,
    version: TEST_VERSION,
    ts: constants_1.MOCK_TS
};
exports.TEST_DEK_2 = TEST_DEK_2;
const TEST_DEK_LATEST = {
    kekName: TEST_KEK_NAME,
    subject: TEST_SUBJECT,
    algorithm: TEST_ALGORITHM,
    encryptedKeyMaterial: TEST_ENCRYPTED_KEY_MATERIAL,
    version: -1,
    ts: constants_1.MOCK_TS
};
exports.TEST_DEK_LATEST = TEST_DEK_LATEST;
