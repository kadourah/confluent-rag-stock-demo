import { URI } from '../util/uri';
import { ContentIndex, ReferenceInfo } from './types';
export interface SchemaMetadata {
    metaSchemaID: URI;
}
export interface SchemaInfo {
    baseURI: URI;
    metadata: SchemaMetadata;
}
export declare class SchemaContentIndex implements ContentIndex<SchemaMetadata> {
    constructor();
    private schemasByURI;
    private schemasByAnchors;
    private schemasByDynamicAnchors;
    private infosBySchema;
    isObjectIndexed(object: object): boolean;
    isURIIndexed(uri: string): boolean;
    indexedObjectWithURI(uri: URI): object;
    infoForIndexedObject(value: any): SchemaInfo | undefined;
    addContentFromRoot(root: any, baseURI: URI, rootMetadata: SchemaMetadata): Map<object, ReferenceInfo<SchemaMetadata>>;
}
