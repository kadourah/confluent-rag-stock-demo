import { additionalItemsValidator } from './additionalItemsValidator';
import { additionalPropertiesValidator } from './additionalPropertiesValidator';
import { allOfValidator } from './allOfValidator';
import { anyOfValidator } from './anyOfValidator';
import { constValidator } from './constValidator';
import { dependenciesValidator } from './dependenciesValidator';
import { enumValidator } from './enumValidator';
import { formatValidator } from './formatValidator';
import { itemsValidator } from './itemsValidator';
import { maxItemsValidator } from './maxItemsValidator';
import { maxLengthValidator } from './maxLengthValidator';
import { maxPropertiesValidator } from './maxPropertiesValidator';
import { maximumValidator } from './maximumValidator';
import { minItemsValidator } from './minItemsValidator';
import { minLengthValidator } from './minLengthValidator';
import { minPropertiesValidator } from './minPropertiesValidator';
import { minimumValidator } from './minimumValidator';
import { multipleOfValidator } from './multipleOfValidator';
import { notValidator } from './notValidator';
import { oneOfValidator } from './oneOfValidator';
import { patternPropertiesValidator } from './patternPropertiesValidator';
import { patternValidator } from './patternValidator';
import { propertiesValidator } from './propertiesValidator';
import { requiredValidator } from './requiredValidator';
import { typeValidator } from './typeValidator';
import { uniqueItemsValidator } from './uniqueItemsValidator';
export declare const validationValidators: {
    type: typeof typeValidator;
    enum: typeof enumValidator;
    const: typeof constValidator;
    pattern: typeof patternValidator;
    minLength: typeof minLengthValidator;
    maxLength: typeof maxLengthValidator;
    multipleOf: typeof multipleOfValidator;
    maximum: typeof maximumValidator;
    minimum: typeof minimumValidator;
    dependencies: typeof dependenciesValidator;
    maxProperties: typeof maxPropertiesValidator;
    minProperties: typeof minPropertiesValidator;
    required: typeof requiredValidator;
    items: typeof itemsValidator;
    additionalItems: typeof additionalItemsValidator;
    maxItems: typeof maxItemsValidator;
    minItems: typeof minItemsValidator;
    uniqueItems: typeof uniqueItemsValidator;
    properties: typeof propertiesValidator;
    patternProperties: typeof patternPropertiesValidator;
    additionalProperties: typeof additionalPropertiesValidator;
    allOf: typeof allOfValidator;
    anyOf: typeof anyOfValidator;
    oneOf: typeof oneOfValidator;
    not: typeof notValidator;
    format: typeof formatValidator;
};
